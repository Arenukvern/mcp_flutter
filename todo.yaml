missing_rpc_implementations:
  inspector:
    methods:
      - method: "removePubRootDirectories"
        steps:
          - Add RPC method to Inspector group in FlutterRPC
          - Add tool definition with directories parameter
          - Implement handler in CallToolRequestSchema
          - Add parameter validation
          - Add error handling
      - method: "getPubRootDirectories"
        steps:
          - Add RPC method to Inspector group in FlutterRPC
          - Add tool definition in ListToolsRequestSchema
          - Implement handler in CallToolRequestSchema
          - Add error handling
      - method: "setFlexFit"
        steps:
          - Add RPC method to Inspector group in FlutterRPC
          - Add tool definition with fit parameter
          - Implement handler in CallToolRequestSchema
          - Add parameter validation
          - Add error handling
      - method: "setFlexFactor"
        steps:
          - Add RPC method to Inspector group in FlutterRPC
          - Add tool definition with factor parameter
          - Implement handler in CallToolRequestSchema
          - Add parameter validation
          - Add error handling
      - method: "setFlexProperties"
        steps:
          - Add RPC method to Inspector group in FlutterRPC
          - Add tool definition with properties parameter
          - Implement handler in CallToolRequestSchema
          - Add parameter validation
          - Add error handling

  performance:
    - method: "profileRenderObjectPaints"
      steps:
        - Add RPC method to Performance group in FlutterRPC
        - Add tool definition with boolean parameter
        - Implement handler in CallToolRequestSchema
        - Add parameter validation
        - Add error handling
    - method: "profileRenderObjectLayouts"
      steps:
        - Add RPC method to Performance group in FlutterRPC
        - Add tool definition with boolean parameter
        - Implement handler in CallToolRequestSchema
        - Add parameter validation
        - Add error handling

refactoring_needed:
  - Group related RPC methods into more specific categories
  - Add comprehensive error handling for all RPC methods
  - Add input validation for all parameters
  - Add proper TypeScript types for all request/response objects
  - Add documentation for all RPC methods
  - Add tests for all RPC methods
  - Add logging for all RPC method calls
  - Add metrics collection for RPC method usage

priority_order:
  high:
    - Inspector methods for widget tree manipulation
    - Core Flutter debugging methods
    - Performance profiling methods
  medium:
    - DartIO methods for file handling
    - Additional inspector methods
  low:
    - Nice-to-have features and optimizations
